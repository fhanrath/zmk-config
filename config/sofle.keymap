/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define UML_A RA(Q)
#define UML_S RA(S)
#define UML_U RA(Y)
#define UML_O RA(P)

#define DEFAULT    0
#define NAVIGATION 1
#define UMLAUT     3

/ {
    macros {
        WM_KILL: WM_KILL {
            label = "WM_KILL";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press   &kp RGUI>
                , <&macro_press   &kp LSHFT>
                , <&macro_tap     &kp Q>
                , <&macro_release &kp LSHFT>
                , <&macro_release &kp RGUI>
                ;
        };
    };

    behaviors {
        bkdel: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp DEL>;
            mods = <(MOD_LSFT)>;
        };
        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_tog";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&tog>;
        };
    };    
    
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// | SHIFT |  1  |  2  |  3   |  4      |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
// |  ESC  |  Q  |  W  |  F   |  P      |  B   |                   |  J   |  L    |  U    |  Y   |   ;   | BKSPC |
// |  TAB  |  A  |  R  |  S   |  T      |  G   |                   |  M   |  N    |  E    |  I   |   O   |   '   |
// |  CTRL |  Z  |  X  |  C   |  D      |  V   |  MUTE  |  |       |  K   |  H    |  ,    |  .   |   /   |   -   |
//               | GUI | ALT  | NAV_UML | SPACE|  ENTER |  | RETURN| SHIFT| CTRL  | ALT   | GUI  |
            bindings = <
&kp LSHFT &kp N1 &kp N2   &kp N3   &kp N4                    &kp N5                          &kp N6     &kp N7    &kp N8    &kp N9   &kp N0   &none
&kp ESC   &kp Q  &kp W    &kp F    &kp P                     &kp B                           &kp J      &kp L     &kp U     &kp Y    &kp SEMI &bkdel
&kp TAB   &kp A  &kp R    &kp S    &kp T                     &kp G                           &kp M      &kp N     &kp E     &kp I    &kp O    &kp SQT
&kp LCTRL &kp Z  &kp X    &kp C    &kp D                     &kp V      &kp C_MUTE &none     &kp K      &kp H     &kp COMMA &kp DOT  &kp FSLH &kp MINUS
                 &kp LGUI &kp LALT &mo_tog NAVIGATION UMLAUT &kp SPACE  &kp LALT  &kp RETURN &kp LSHFT  &kp RCTRL &kp RALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
// |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&trans      &kp F1    &kp F2    &kp F3      &kp F4    &kp F5                    &kp F6    &kp F7   &kp F8          &kp F9    &kp F10   &kp F11
&mo DEFAULT &kp N1    &kp N2    &kp N3      &kp N4    &kp N5                    &kp N6    &kp N7   &kp N8          &kp N9    &kp N0    &kp F12
&trans      &kp EXCL  &kp AT    &kp HASH    &kp DLLR  &kp PRCNT                 &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp PIPE
&trans      &kp EQUAL &kp MINUS &kp KP_PLUS &kp LBRC  &kp RBRC  &trans   &trans &kp LBKT  &kp RBKT &kp SEMI        &kp COLON &kp BSLH  &trans
                      &trans    &trans      &trans    &trans    &trans   &trans &trans    &trans   &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
// |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
// |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
//              |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4             &trans    &trans    &trans   &trans    &trans  &trans
&trans     &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &trans                   &kp PG_UP &trans    &kp UP   &trans    &kp N0  &trans
&trans     &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &kp CLCK                 &kp PG_DN &kp LEFT  &kp DOWN &kp RIGHT &kp DEL &kp BSPC
&trans     &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans  &trans   &trans  &trans    &trans    &trans   &trans    &trans  &trans
                        &trans       &trans       &trans       &trans  &trans   &trans  &trans    &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        
        umlaut_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
// |  ESC  |  Q  |  W  |  F   |  P   |  B   |                   |  J   |  L    |  Ü    |  Y   |   ;   | BKSPC |
// |  TAB  |  Ä  |  R  |  ß   |  T   |  G   |                   |  M   |  N    |  E    |  I   |   Ö   |   '   |
// |  CTRL |  Z  |  X  |  C   |  D   |  V   |  MUTE  |  |       |  K   |  H    |  ,    |  .   |   /   |   -   |
//               | GUI | ALT  | CTRL | SPACE|  ENTER |  | RETURN| SHIFT| CTRL  | ALT   | GUI  |
            bindings = <
&trans &trans    &trans &trans    &trans &trans                 &trans &trans &trans    &trans &trans    &trans
&trans &trans    &trans &trans    &trans &trans                 &trans &trans &kp UML_U &trans &trans    &trans
&trans &kp UML_A &trans &kp UML_S &trans &trans                 &trans &trans &trans    &trans &kp UML_O &trans
&trans &trans    &trans &trans    &trans &trans &trans   &trans &trans &trans &trans    &trans &trans    &trans
                 &trans &trans    &none  &trans &trans   &trans &trans &trans &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
